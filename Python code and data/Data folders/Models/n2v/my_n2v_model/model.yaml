name: my_n2v_model
description: This is the 2D Noise2Void example trained on miR data in python.
cite:
- text: "Krull, A. and Buchholz, T. and Jug, F. Noise2void - learning denoising from
    single noisy images.\nProceedings of the IEEE Conference on Computer Vision and
    Pattern Recognition (2019)"
  doi: 10.1109/CVPR.2019.00223
authors:
- Tim-Oliver Buchholz
- Alexander Krull
- Florian Jug
language: python
framework: tensorflow
format_version: 0.2.0-csbdeep
source: n2v
test_input: testinput.tif
test_output: testoutput.tif
inputs:
- name: input
  axes: byxc
  data_type: float32
  data_range:
  - -inf
  - inf
  halo:
  - 0
  - 22
  - 22
  - 0
  shape:
    min:
    - 1
    - 4
    - 4
    - 1
    step:
    - 1
    - 4
    - 4
    - 0
outputs:
- name: Placeholder:0
  axes: byxc
  data_type: float32
  data_range:
  - -inf
  - inf
  shape:
    reference_input: input
    scale:
    - 1
    - 1
    - 1
    - 1
    offset:
    - 0
    - 0
    - 0
    - 0
training:
  source: n2v.train()
  kwargs: {means: ['904.82294'], stds: ['35.84849'], n_dim: 2, axes: YXC, n_channel_in: 1,
    n_channel_out: 1, unet_residual: false, unet_n_depth: 2, unet_kern_size: 3, unet_n_first: 32,
    unet_last_activation: linear, unet_input_shape: [null, null, 1], train_loss: mae,
    train_epochs: 1, train_steps_per_epoch: 16, train_learning_rate: 0.0004, train_batch_size: 128,
    train_tensorboard: true, train_checkpoint: weights_best.h5, train_reduce_lr: {
      factor: 0.5, patience: 10}, batch_norm: true, n2v_perc_pix: 0.198, n2v_patch_shape: [
      64, 64], n2v_manipulator: median, n2v_neighborhood_radius: 3, single_net_per_channel: true,
    blurpool: true, skip_skipone: false, structN2Vmask: null, probabilistic: false}
prediction:
  weights:
    source: ./variables/variables
  preprocess:
  - kwargs:
      mean:
      - 904.82294
      stdDev:
      - 35.84849
  postprocess:
  - kwargs:
      mean:
      - 904.82294
      stdDev:
      - 35.84849
